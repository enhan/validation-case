buildscript {
    ext.kotlin_version = '1.2.21'

    ext.arrowVersion  = '0.7.1'


    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'eu.enhan'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'scala'
apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'org.scala-lang:scala-library:2.12.4'

    // needed for our use case
    compile 'com.typesafe:config:1.3.3'
    compile 'com.google.guava:guava:24.1-jre'


    // Hibernate validator...
    compile 'org.hibernate.validator:hibernate-validator:6.0.8.Final'
    compile 'org.glassfish:javax.el:3.0.1-b09'
    compile 'org.hibernate.validator:hibernate-validator-cdi:6.0.8.Final'

    // Arrow
    compile 'io.arrow-kt:arrow-core:0.7.1'
    compile 'io.arrow-kt:arrow-syntax:0.7.1'
    compile 'io.arrow-kt:arrow-typeclasses:0.7.1'
    compile 'io.arrow-kt:arrow-data:0.7.1'
    compile 'io.arrow-kt:arrow-instances-core:0.7.1'
    compile 'io.arrow-kt:arrow-instances-data:0.7.1'
    kapt    'io.arrow-kt:arrow-annotations-processor:0.7.1'

    // Scala part
    compile 'org.typelevel:cats-core_2.12:1.1.0'

    compile "ch.qos.logback:logback-classic:1.2.3"

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
//    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.0.1'
    testCompile 'org.assertj:assertj-core:3.9.0'

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-Ypartial-unification"]
}

test {
    useJUnitPlatform()
}